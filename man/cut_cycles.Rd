% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cut_cycles.R
\name{cut_cycles}
\alias{cut_cycles}
\title{Cut cycles}
\usage{
cut_cycles(
  ts,
  n_cycles = Inf,
  min_win = 60,
  min_peakvalue = 0.1,
  max_dropvalue = 0.6,
  max_groundvalue = 0.2,
  ground_buffer = 10,
  value_type = "relative",
  min_relh = 0.15,
  relevance = 0,
  newyearday = "01-01",
  weight_metric = "integral"
)
}
\arguments{
\item{ts}{Time series in \code{s2ts} format (generated using \code{fill_s2ts()}).}

\item{n_cycles}{(optional) Maximum number of cycles to be detected in one year
(default: Inf, meaning that all the identified cycles are kept).
A cycle overlapping the new year's day (argument \code{newyearday})
is assigned to the year in which the date of maximum value falls.}

\item{min_win}{(optional) Minimum time window between two consecutive
maxima / minima to consider a separate cycle.}

\item{min_peakvalue}{(optional) Minimum value to consider a cycle peak.}

\item{max_dropvalue}{(optional) Maximum value to consider a cycle drop
(breakpoint).}

\item{max_groundvalue}{(optional) Maximum value to identify a ground plain
(window without cycles).}

\item{ground_buffer}{(optional) n. of days of beginning / ending of grounds
to be included in previous / next seasons.}

\item{value_type}{(optional) Character: if \code{"relative"} (default), values
set with arguments \code{min_peakval} and \code{max_dropval} are relative
values (normalised to 0-1 range among IDs);
if \code{"absolute"}, absolute values are considered.}

\item{min_relh}{(optional) Numeric: minimum relative difference between the
maximum and each of the two minima to consider a separate cycle.
Default is 0.15.}

\item{relevance}{(optional) Numeric: threshold used to consider
local minima as relevant, according to Meroni et al. (2021)
(see for reference).
This is an alternative criterion with respect to \code{min_relh}
(nevertheless they can be used together, too).
Default is 0, meaning that this criterion is not used by default.}

\item{newyearday}{(optional) day to be considered as new year's day, used
to assign cycles to the proper year.
It can be an object of class \code{Date} (in which case the year is ignored)
or a character value in the form \code{mm-dd}.
In case it is July 1 or higher, cycles whose maximum value is falling in
the last  part of the year are assigned to the subsequent year;
otherwise, cycles whose maximum value is falling in the first part of the
year are assigned  to the previous year. Default is January 1
(all cycles are assigned the the year in which their maximum value falls).}

\item{weight_metric}{(optional) Criterion used to assign a weight value
to each seasons (used by subsequent functions:
\code{"integral"} (default: sum of values among the cycle),
\code{"length"} (length of the cycle) or
\code{"maxval"} (maximum value reached in the cycle).}
}
\value{
A data table with the following fields:
\itemize{
\item \code{id}: the time series ID (see \code{s2ts});
\item \code{year}: the year assigned to each cycle;
\item \code{cycle}: the cycle ID (progressive integer within each year);
\item \code{begin}: the date of the begin of the cycle;
\item \code{end}: the date of the end of the cycle;
\item \code{maxval}: the date of the maximum value of the cycle;
\item \code{weight}: the value of the metric used for ranking seasons.
}
}
\description{
Cut Sentinel-2 time series into separate cycles,
detecting dates of cuts and peaks.
}
\note{
The steps used to discriminate seasons are partially based on the method
exposed in Meroni et al. (2021) (\doi{10.1016/j.rse.2020.112232}).
The methodology will be documented in future.
}
\examples{
# Load input data
data("ts_filled")

# Cut seasons with standard parameters
dt_cycles <- cut_cycles(ts_filled)
dt_cycles
# Plot the TS highlighting the extracted cycles
plot(ts_filled, pheno = dt_cycles, plot_dates = TRUE)

# Cut cycles considering separate cycles only if the maximum NDVI is > 0.7
dt_cycles_2 <- cut_cycles(
  ts_filled,
  min_win = 120, # exclude cycles shorter than 4 months
  min_peakvalue = 0.7, # exclude cycles with NDVI of peak < 0.7
  value_type = "absolute", # 0.7 is the absolute NDVI value, not relative
  newyearday = "10-01" # consider a year from 1st October to 30th September
)
plot(ts_filled, pheno = dt_cycles_2)
}
\author{
Luigi Ranghetti, PhD (2021) \email{luigi@ranghetti.info}
}
