% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s2ts-class.R
\name{s2ts}
\alias{s2ts}
\alias{as.s2ts}
\title{Class \code{s2ts}}
\usage{
s2ts(value, date, id = NA, qa, orbit, sensor, rawval, ...)

as.s2ts(x, ...)
}
\arguments{
\item{value}{(mandatory) Vector with the values ("y") of the time series.}

\item{date}{(mandatory) Vector (of the same length of \code{value}) with the dates
of each value.}

\item{id}{(optional) Vector (of the same length of \code{value} or of length 1,
in which case the passed value is replicated for each element of \code{value})
with the feature IDs of each value.
If missing, all the values are considered as extracted from the same feature.}

\item{qa}{(optional) Vector (of the same length of \code{value}) with the quality
assessment values (range 0-1) associated to each value.
If missing, all the values are considered as equally weighted.}

\item{orbit}{(optional) Vector (of the same length of \code{value}or of length 1,
in which case the passed value is replicated for each element of \code{value})
with the Sentinel-2 orbits of each value.}

\item{sensor}{(optional) Vector (of the same length of \code{value} or of length 1,
in which case the passed value is replicated for each element of \code{value})
with the Sentinel-2 sensors (\code{"2A"} or \code{"2B"}) of each value.}

\item{rawval}{(optional) Vector (of the same length of \code{value}) with the
non-smoothed values (this is generally created by outputs of \code{smooth_s2ts()}).}

\item{...}{Additional vectors to be passed.
Each additional argument is threated as an additional element of the output
list in case it is of the same length of \code{value}, otherwise it is threated
as an output attribute.}

\item{x}{Input element to be converted to \code{s2ts}.}
}
\value{
The output time series in \code{s2ts} format.

This is a format derived from \code{data.table}, containing the mandatory columns
\code{id}, \code{date}, \code{value}, and additional ones among which
\code{qa}, \code{orbit}, \code{sensor} and \code{rawval} (see the arguments in this help for
their meanings).

The optional attribute \code{gen_by} provides information about the function
which generated the object (if provided).
}
\description{
Class used for \code{{sen2rts}} time series.
}
\details{
Some specific methods for this class are defined.
\itemize{
\item \verb{<s2ts_obj>$value} returns a \code{data.table} with the values for each date,
in wide format.
\item \verb{<s2ts_obj>$date} returns a \code{vector} with the dates.
\item \verb{<s2ts_obj>$id} returns a \code{vector} with the unique ID values.
\item \verb{<s2ts_obj>$qa} returns a \code{data.table} with the quality assessment values
for each date, in wide format.
\item \verb{<s2ts_obj>$rawval} returns a \code{data.table} with the \code{rawval} values for
each date, in wide format.
\item \verb{<s2ts_obj>[[<idname>]]} returns a subsampled \code{s2ts} containing only
the values of the provided ID.
}

Notice that since \code{$} and \code{[[} methods are defined, the syntaxes
\verb{<s2ts_obj>$<fieldname>} and \verb{<s2ts_obj>[["<fieldname>"]]}
can not be used (use instead \verb{<s2ts_obj>[,<fieldname>]}).
}
\examples{
## Create a s2ts object from raw
library(sen2r)
sample_dt <- sen2r::s2_dop(
  timewindow = c("2020-01-01", "2020-01-31"), 
  s2_orbit = 22
)
sample_dt$ndvi <- runif(nrow(sample_dt), 0, 1)
sample_dt$qa <- sqrt(sample_dt$ndvi)

# Minimum example (including dates and values)
s2ts(value = sample_dt$ndvi, date = sample_dt$date, id = "1")

# Example with additional information (including quality flags)
sample_ts <- s2ts(
  value = sample_dt$ndvi, 
  date = sample_dt$date, 
  id = "1",
  qa = sample_dt$qa, 
  sensor = sample_dt$mission
)
sample_ts

# Extract s2ts content
as.list(sample_dt) # convert in list (unclass)
sample_ts$date # extract dates
sample_ts$id # extract IDs
sample_ts$value # extract values
sample_ts$qa # extract quality values
sample_ts$rawval # extract raw values (for smooth_s2ts() and fill_s2ts() outputs)

# Load sample data generated by sen2rts functions
data(ts_raw)      # generated by extract_s2ts()
data(ts_smoothed) # generated by smooth_s2ts()
data(ts_filled)   # generated by fill_s2ts()

# Visualise data
print(ts_raw, topn = 5)
print(ts_smoothed, topn = 5)
print(ts_raw, topn = 5)

# See which function generated a s2ts object
attr(ts_raw, "gen_by")
attr(ts_smoothed, "gen_by")
attr(ts_filled, "gen_by")

# Convert in data frames or data tables
df_raw <- as.data.frame(ts_raw)
head(df_raw)
df_smoothed <- as.data.frame(ts_smoothed)
head(df_smoothed)
df_filled <- as.data.frame(ts_filled)
head(df_filled)
}
\author{
Luigi Ranghetti, PhD (2020) \email{luigi@ranghetti.info}
}
